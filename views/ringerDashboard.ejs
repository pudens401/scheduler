<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Ringer Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .btn-orange { background-color: #fb923c; color: #fff; }
    .btn-orange:hover { background-color: #f97316; }
    @media (min-width: 768px) {
      .device-id { min-width: 200px; }
      .schedule-input { min-width: 120px; }
      .action-input { min-width: 160px; }
    }
  </style>
  <link rel="manifest" href="/manifest.webmanifest">
  <meta name="theme-color" content="#fb923c">
  <link rel="apple-touch-icon" href="/icons/icon-192.png">
</head>
<body class="bg-orange-50 font-sans">
  <div class="container mx-auto px-4 py-6 max-w-6xl">
    <header class="mb-8">
      <h1 class="text-2xl md:text-3xl font-bold text-orange-700">Ringer Dashboard</h1>
      <p class="text-orange-600 md:text-lg">Control your ringer device</p>
    </header>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Left Column -->
      <div class="lg:col-span-2 space-y-6">
        <!-- Ringer Schedule -->
        <section class="bg-white rounded-lg shadow p-6">
          <h2 class="text-xl md:text-2xl font-semibold mb-4 text-orange-700">Ringer Schedule</h2>
          <div class="overflow-x-auto">
            <table class="min-w-full">
              <thead>
                <tr class="border-b">
                  <th class="text-left py-2 px-1 text-orange-700 md:text-lg">Time</th>
                  <th class="text-left py-2 px-1 text-orange-700 md:text-lg">Action</th>
                </tr>
              </thead>
              <tbody id="scheduleTable">
                <% (scheduleData || []).forEach(function(item){ %>
                <tr class="border-b">
                  <td class="py-3 px-1">
                    <input type="time" value="<%= item.time24 || item.time || '08:00' %>" class="border rounded px-2 py-1 w-full schedule-input">
                  </td>
                  <td class="py-3 px-1">
                    <select class="border rounded px-2 py-1 w-full action-input">
                      <option value="ring" <%= (item.action || 'ring') === 'ring' ? 'selected' : '' %>>Ring</option>
                      <option value="silent" <%= (item.action || '') === 'silent' ? 'selected' : '' %>>Silent</option>
                    </select>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          <div class="flex flex-col md:flex-row gap-2 mt-4">
            <button id="addFieldBtn" type="button" class="btn-orange text-white py-2 px-4 rounded-md transition duration-200 w-full md:w-auto md:px-8">Add Field</button>
            <button id="updateScheduleBtn" class="btn-orange text-white py-2 px-4 rounded-md transition duration-200 w-full md:w-auto md:px-8">Update Schedule</button>
          </div>
        </section>

        <!-- Device Section -->
        <section class="bg-white rounded-lg shadow p-6">
          <h2 class="text-xl md:text-2xl font-semibold mb-4 text-orange-700">My Device</h2>
          <div class="flex items-center">
            <div class="bg-orange-100 p-3 rounded-full mr-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
              </svg>
            </div>
            <div>
              <p class="text-orange-600 text-sm md:text-base">Device ID</p>
              <p id="deviceId" class="font-medium text-orange-800 md:text-lg device-id"><%= deviceId %></p>
            </div>
          </div>
        </section>
      </div>

      <!-- Right Column -->
      <div class="space-y-6">
        <!-- Actions (replaces Notifications) -->
        <section class="bg-white rounded-lg shadow p-6">
          <h2 class="text-xl md:text-2xl font-semibold mb-4 text-orange-700">Actions</h2>
          <div class="flex flex-col sm:flex-row gap-3">
            <button id="ringBtn" class="btn-orange px-6 py-2 rounded font-semibold">
              Ring
            </button>
            <button id="silentBtn" class="btn-orange px-6 py-2 rounded font-semibold">
              Silent
            </button>
          </div>
        </section>

        <!-- Profile -->
        <section class="bg-white rounded-lg shadow p-6">
          <h2 class="text-xl md:text-2xl font-semibold mb-4 text-orange-700">Profile</h2>
          <div class="flex items-center">
            <div class="bg-orange-100 p-3 rounded-full mr-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
            </div>
            <div>
              <p id="userName" class="font-medium text-orange-800 md:text-lg"><%= user.name %></p>
              <p id="userRole" class="text-orange-600 text-sm md:text-base"><%= user.role %></p>
            </div>
          </div>
        </section>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const deviceId = '<%= deviceId %>';

      // Add new time/action field
      document.getElementById('addFieldBtn')?.addEventListener('click', function () {
        const table = document.getElementById('scheduleTable');
        const newRow = document.createElement('tr');
        newRow.className = 'border-b';
        newRow.innerHTML = `
          <td class="py-3 px-1">
            <input type="time" value="08:00" class="border rounded px-2 py-1 w-full schedule-input">
          </td>
          <td class="py-3 px-1">
            <select class="border rounded px-2 py-1 w-full action-input">
              <option value="ring" selected>Ring</option>
              <option value="silent">Silent</option>
            </select>
          </td>
        `;
        table.appendChild(newRow);
      });

      // Update schedule (send times + action to backend)
      const updateBtn = document.getElementById('updateScheduleBtn');
      if (updateBtn) {
        updateBtn.addEventListener('click', function () {
          const rows = document.querySelectorAll('#scheduleTable tr');
          const updatedSchedule = [];
          rows.forEach(row => {
            const timeInput = row.querySelector('input[type="time"]');
            const actionSelect = row.querySelector('select');
            if (timeInput && actionSelect) {
              updatedSchedule.push({
                time: timeInput.value,
                action: actionSelect.value
              });
            }
          });

          fetch('/schedule/' + deviceId, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ times: updatedSchedule, action: 'update' })
          })
          .then(res => res.json())
          .then(() => alert('Schedule updated successfully!'))
          .catch(() => alert('Error updating schedule'));
        });
      }

      // Direct actions
      document.getElementById('ringBtn')?.addEventListener('click', function () {
        fetch(`/device/ring/${deviceId}`)
          .then(res => res.json())
          .then(data => alert(data.message || 'Ringer triggered'))
          .catch(() => alert('Error triggering ringer'));
      });

      document.getElementById('silentBtn')?.addEventListener('click', function () {
        fetch(`/device/silent/${deviceId}`)
          .then(res => res.json())
          .then(data => alert(data.message || 'Ringer silenced'))
          .catch(() => alert('Error silencing ringer'));
      });
    });

    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js').catch(console.error);
      });
    }
  </script>
</body>
</html>